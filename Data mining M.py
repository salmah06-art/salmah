# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fo1rOIbogNyl1p8OihbuQqEc6L7UUjvI
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load model
with open("iris_nb_model.pkl", "rb") as file:
    model = pickle.load(file)

# Load dataset
iris = load_iris()
iris_df = pd.DataFrame(iris.data, columns=iris.feature_names)
iris_df['target'] = iris.target
iris_df['species'] = iris_df['target'].apply(lambda x: iris.target_names[x])

# Sidebar navigation
st.sidebar.title("Iris Classifier App")
page = st.sidebar.radio("Go to", ["Data Description", "Prediction", "Visualization"])

# Page 1: Data Description
if page == "Data Description":
    st.title("üå∏ Iris Dataset Overview")
    st.write("""
    The Iris dataset is a classic dataset in machine learning and statistics. It includes:
    - 150 samples of iris flowers
    - 3 species: setosa, versicolor, and virginica
    - 4 features: sepal length, sepal width, petal length, and petal width
    """)
    st.write("### Sample Data")
    st.dataframe(iris_df.head())

    st.write("### Class Distribution")
    st.bar_chart(iris_df['species'].value_counts())

# Page 2: Prediction
elif page == "Prediction":
    st.title("üîç Predict Iris Species")
    st.write("Enter flower measurements below:")

    # Input fields
    sl = st.slider("Sepal Length (cm)", 4.0, 8.0, 5.1)
    sw = st.slider("Sepal Width (cm)", 2.0, 4.5, 3.5)
    pl = st.slider("Petal Length (cm)", 1.0, 7.0, 1.4)
    pw = st.slider("Petal Width (cm)", 0.1, 2.5, 0.2)

    input_data = np.array([[sl, sw, pl, pw]])

    if st.button("Predict"):
        prediction = model.predict(input_data)
        species = iris.target_names[prediction[0]]
        st.success(f"The predicted Iris species is: **{species.capitalize()}**")

# Page 3: Visualization
else:
    st.title("üìä Data Visualization")
    st.write("Visualize feature relationships with species classification.")

    fig, ax = plt.subplots()
    sns.scatterplot(
        data=iris_df,
        x="sepal length (cm)",
        y="sepal width (cm)",
        hue="species",
        palette="Set1",
        ax=ax
    )
    st.pyplot(fig)

    fig2, ax2 = plt.subplots()
    sns.pairplot(iris_df, hue="species", palette="Set2")
    st.pyplot(fig2)