# -- coding: utf-8 --
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FIKVpDJVnD7OSPo4woZGMWLh8FAsBqEC
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
from sklearn.datasets import load_iris

st.set_page_config(page_title="Iris Dashboard App", layout="centered")
st.sidebar.header("Dashboard")

st.title("Selamat datang di Aplikasi")
st.write("Aplikasi ini dibuat untuk demonstrasi proyek akhir Data Mining")

# Load model
#with open("model.pkl", "rb") as f:
 #   model = pickle.load(f)

# Load Iris data
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df["species"] = pd.Categorical.from_codes(iris.target, iris.target_names)

# Page selection
st.sidebar.title("Iris Classifier Navigation")
page = st.sidebar.selectbox("Select a page:", ["Data Description", "Prediction", "About Naive Bayes"])

# --- Page 1: Data Description ---
if page == "Data Description":
    st.title("üå∏ Iris Dataset Description")
    st.write("""
    The Iris flower dataset consists of 150 samples from three species of Iris:
    - Iris-setosa
    - Iris-versicolor
    - Iris-virginica

    Each sample has four features:
    - Sepal Length
    - Sepal Width
    - Petal Length
    - Petal Width
    """)
    st.write("Here's the raw data:")
    st.dataframe(df)
    st.write("Class distribution:")
    st.bar_chart(df["species"].value_counts())

# --- Page 2: Prediction ---
elif page == "Prediction":
    st.title("üîç Iris Species Prediction")
    st.write("Enter the flower measurements below:")

    # Input form
    sepal_length = st.number_input("Sepal Length (cm)", 0.0, 10.0, 5.1)
    sepal_width = st.number_input("Sepal Width (cm)", 0.0, 10.0, 3.5)
    petal_length = st.number_input("Petal Length (cm)", 0.0, 10.0, 1.4)
    petal_width = st.number_input("Petal Width (cm)", 0.0, 10.0, 0.2)

    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])

    if st.button("Predict"):
        prediction = model.predict(input_data)[0]
        st.success(f"The predicted Iris species is *{iris.target_names[prediction]}* üåº")

# --- Page 3: About Naive Bayes ---
elif page == "About Naive Bayes":
    st.title("üìò About Naive Bayes Classifier")
    st.markdown("""
    Naive Bayes is a *probabilistic classifier* based on *Bayes' theorem*, with an assumption of independence between features.

    #### Why use it?
    - Simple and fast
    - Performs well on small datasets like Iris
    - Handles multiclass problems efficiently

    #### Formula:
    $$ P(y|X) = \\frac{P(X|y)P(y)}{P(X)} $$

    Where:
    - \( y \) is the class label
    - \( X \) is the input features

    #### Assumption:
    Features are *conditionally independent* given the class.
    """)
